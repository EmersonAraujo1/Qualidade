<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title>Painel de Monitorias - CASA</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #121212;
      color: #fff;
      margin: 0;
      padding: 20px;
    }
    h1 {
      color: #4db8ff;
    }
    .filters {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-bottom: 20px;
    }
    .filters select, .filters input {
      padding: 8px;
      border-radius: 5px;
      border: none;
    }
    canvas {
      background: #1e1e1e;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 30px;
    }
  </style>
</head>
<body>
  <h1>📊 Painel de Monitorias - CASA</h1>

  <div class="filters">
    <select id="monitorFilter">
      <option value="">Todos os Monitores</option>
    </select>
    <select id="tipoFilter">
      <option value="">Todos os Tipos</option>
    </select>
    <select id="celulaFilter">
      <option value="">Todas as Células</option>
    </select>
    <input type="date" id="dataInicio">
    <input type="date" id="dataFim">
    <button onclick="aplicarFiltros()">Aplicar Filtros</button>
  </div>

  <canvas id="graficoTipo" height="100"></canvas>
  <canvas id="graficoMonitor" height="100"></canvas>
  <canvas id="graficoConformidade" height="100"></canvas>

  <script>
    const dados = [
      {
        "data": "2025-01-06",
        "tipo": "Gravação",
        "celula": "Admissão UJ",
        "monitor": "Michelle Oliveira dos Santos",
        "nao_conformidade": "Não",
        "nota": "-"
      },
      {
        "data": "2025-01-04",
        "tipo": "Gravação",
        "celula": "Admissão Uva",
        "monitor": "Viviane Cesar da Cruz",
        "nao_conformidade": "Não",
        "nota": "-"
      }
      // ← Aqui você pode substituir pelos dados reais exportados do Excel!
    ];

    let dadosFiltrados = [...dados];

    function atualizarFiltros() {
      const monitores = [...new Set(dados.map(d => d.monitor))];
      const tipos = [...new Set(dados.map(d => d.tipo))];
      const celulas = [...new Set(dados.map(d => d.celula))];

      const monitorSel = document.getElementById('monitorFilter');
      const tipoSel = document.getElementById('tipoFilter');
      const celulaSel = document.getElementById('celulaFilter');

      monitores.forEach(m => monitorSel.innerHTML += `<option value="${m}">${m}</option>`);
      tipos.forEach(t => tipoSel.innerHTML += `<option value="${t}">${t}</option>`);
      celulas.forEach(c => celulaSel.innerHTML += `<option value="${c}">${c}</option>`);
    }

    function aplicarFiltros() {
      const monitor = document.getElementById('monitorFilter').value;
      const tipo = document.getElementById('tipoFilter').value;
      const celula = document.getElementById('celulaFilter').value;
      const dataInicio = document.getElementById('dataInicio').value;
      const dataFim = document.getElementById('dataFim').value;

      dadosFiltrados = dados.filter(d => {
        return (!monitor || d.monitor === monitor) &&
               (!tipo || d.tipo === tipo) &&
               (!celula || d.celula === celula) &&
               (!dataInicio || d.data >= dataInicio) &&
               (!dataFim || d.data <= dataFim);
      });

      desenharGraficos();
    }

    function desenharGraficos() {
      const ctx1 = document.getElementById("graficoTipo").getContext("2d");
      const ctx2 = document.getElementById("graficoMonitor").getContext("2d");
      const ctx3 = document.getElementById("graficoConformidade").getContext("2d");

      if (window.chart1) window.chart1.destroy();
      if (window.chart2) window.chart2.destroy();
      if (window.chart3) window.chart3.destroy();

      const porTipo = contarPorCampo("tipo");
      const porMonitor = contarPorCampo("monitor");
      const porConformidade = contarPorCampo("nao_conformidade");

      window.chart1 = new Chart(ctx1, {
        type: "bar",
        data: {
          labels: Object.keys(porTipo),
          datasets: [{ label: "Monitorias por Tipo", data: Object.values(porTipo), backgroundColor: "#4db8ff" }]
        }
      });

      window.chart2 = new Chart(ctx2, {
        type: "bar",
        data: {
          labels: Object.keys(porMonitor),
          datasets: [{ label: "Monitorias por Monitor", data: Object.values(porMonitor), backgroundColor: "#4ddb4d" }]
        }
      });

      window.chart3 = new Chart(ctx3, {
        type: "pie",
        data: {
          labels: Object.keys(porConformidade),
          datasets: [{ label: "Conformidade", data: Object.values(porConformidade), backgroundColor: ["#ff6666", "#66ff66", "#cccccc"] }]
        }
      });
    }

    function contarPorCampo(campo) {
      return dadosFiltrados.reduce((acc, obj) => {
        acc[obj[campo]] = (acc[obj[campo]] || 0) + 1;
        return acc;
      }, {});
    }

    atualizarFiltros();
    aplicarFiltros();
  </script>
</body>
</html>
